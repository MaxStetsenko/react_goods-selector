{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","handlerSelect","method","data","setState","filter","good","clearSelectedGoods","this","className","length","join","Boolean","type","onClick","map","isSelected","includes","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAe,CACbC,cAAe,CAAC,Q,EAGlBC,cAAgB,SAACC,EAAgBC,GAChB,WAAXD,GACF,EAAKE,UAAS,SAAAL,GAAK,MAAK,CACtBC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BG,QAI7B,WAAXD,GACF,EAAKE,UAAS,SAAAL,GAAK,MAAK,CACtBC,cAAeD,EAAMC,cAAcK,QAAO,SAAAC,GAAI,OAAIA,IAASH,U,EAKjEI,mBAAqB,WACnB,EAAKH,SAAS,CAAEJ,cAAe,M,4CAGjC,WAAU,IAAD,OACCA,EAAkBQ,KAAKT,MAAvBC,cAER,OACE,qBAAKS,UAAU,MAAf,SACE,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,yBAAd,SAEIT,EAAcU,OACV,+BAAOV,EAAcW,KAAK,QAC1B,sBAINC,QAAQZ,EAAcU,SACpB,wBACEG,KAAK,SACLJ,UAAU,yBACVK,QAASN,KAAKD,mBAHhB,sBAWN,oBAAIE,UAAU,iBAAd,SACGZ,EAAgBkB,KAAI,SAAAT,GACnB,IAAMU,EAAahB,EAAciB,SAASX,GAE1C,OACE,qBAEEG,UACES,IACE,sBACA,CACE,gCAAiCF,IANzC,UAWE,8BAAMV,IACN,wBACEO,KAAK,SACLJ,UAAU,0BACVK,QAAS,kBAAM,EAAKb,cAClBe,EACI,SACA,SACJV,IAPJ,SAWIU,EACI,SACA,aAxBHV,iB,GAxDLa,IAAMC,WA6FTtB,IC/GfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.45bff99c.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: ['Jam'],\n  };\n\n  handlerSelect = (method: string, data: string) => {\n    if (method === 'Select') {\n      this.setState(state => ({\n        selectedGoods: [...state.selectedGoods, data],\n      }));\n    }\n\n    if (method === 'Remove') {\n      this.setState(state => ({\n        selectedGoods: state.selectedGoods.filter(good => good !== data),\n      }));\n    }\n  };\n\n  clearSelectedGoods = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"selector\">\n          <div className=\"selector__header\">\n            <h1 className=\"selector__header-title\">\n              {\n                selectedGoods.length\n                  ? <span>{selectedGoods.join(', ')}</span>\n                  : 'No goods selected'\n              }\n            </h1>\n            {\n              Boolean(selectedGoods.length) && (\n                <button\n                  type=\"button\"\n                  className=\"selector__header-clear\"\n                  onClick={this.clearSelectedGoods}\n                >\n                  Clear\n                </button>\n              )\n            }\n\n          </div>\n          <ul className=\"selector__list\">\n            {goodsFromServer.map(good => {\n              const isSelected = selectedGoods.includes(good);\n\n              return (\n                <li\n                  key={good}\n                  className={\n                    classNames(\n                      'selector__list-item',\n                      {\n                        'selector__list-item--selected': isSelected,\n                      },\n                    )\n                  }\n                >\n                  <div>{good}</div>\n                  <button\n                    type=\"button\"\n                    className=\"selector__list-item-btn\"\n                    onClick={() => this.handlerSelect(\n                      isSelected\n                        ? 'Remove'\n                        : 'Select',\n                      good,\n                    )}\n                  >\n                    {\n                      isSelected\n                        ? 'Remove'\n                        : 'Select'\n                    }\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}